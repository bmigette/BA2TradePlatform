"""sync_schema_with_models

Revision ID: 97ecdd6d06d5
Revises: fae5a5e0e1fb
Create Date: 2025-10-08 18:21:08.304823

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '97ecdd6d06d5'
down_revision: Union[str, Sequence[str], None] = 'fae5a5e0e1fb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Data migration: Set default values for NULL fields before applying NOT NULL constraints
    conn = op.get_bind()
    
    # Set default company_name for instruments with NULL values (use symbol as fallback)
    conn.execute(sa.text("UPDATE instrument SET company_name = name WHERE company_name IS NULL"))
    
    # Set default created_at for analysisoutput with NULL values
    conn.execute(sa.text("UPDATE analysisoutput SET created_at = datetime('now') WHERE created_at IS NULL"))
    
    # Set default created_at for marketanalysis with NULL values
    conn.execute(sa.text("UPDATE marketanalysis SET created_at = datetime('now') WHERE created_at IS NULL"))
    
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('analysisoutput', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=False)

    with op.batch_alter_table('expertinstance', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_expertinstance_open_positions_ruleset', 'ruleset', ['open_positions_ruleset_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key('fk_expertinstance_enter_market_ruleset', 'ruleset', ['enter_market_ruleset_id'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('expertrecommendation', schema=None) as batch_op:
        batch_op.alter_column('recommended_action',
               existing_type=sa.VARCHAR(length=4),
               type_=sa.Enum('SELL', 'BUY', 'HOLD', 'ERROR', name='orderrecommendation'),
               existing_nullable=False)
        batch_op.create_foreign_key('fk_expertrecommendation_market_analysis', 'marketanalysis', ['market_analysis_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('instrument', schema=None) as batch_op:
        batch_op.alter_column('company_name',
               existing_type=sa.VARCHAR(),
               nullable=False)

    with op.batch_alter_table('marketanalysis', schema=None) as batch_op:
        batch_op.alter_column('subtype',
               existing_type=sa.VARCHAR(length=14),
               nullable=False,
               existing_server_default=sa.text("'ENTER_MARKET'"))
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=False)

    with op.batch_alter_table('ruleset', schema=None) as batch_op:
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(length=26),
               type_=sa.Enum('TRADING_RECOMMENDATION_RULE', name='experteventruletype'),
               nullable=False,
               existing_server_default=sa.text("'TRADING_RECOMMENDATION_RULE'"))

    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_transaction_expert', 'expertinstance', ['expert_id'], ['id'], ondelete='SET NULL')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.drop_constraint('fk_transaction_expert', type_='foreignkey')

    with op.batch_alter_table('ruleset', schema=None) as batch_op:
        batch_op.alter_column('type',
               existing_type=sa.Enum('TRADING_RECOMMENDATION_RULE', name='experteventruletype'),
               type_=sa.VARCHAR(length=26),
               nullable=True,
               existing_server_default=sa.text("'TRADING_RECOMMENDATION_RULE'"))

    with op.batch_alter_table('marketanalysis', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.alter_column('subtype',
               existing_type=sa.VARCHAR(length=14),
               nullable=True,
               existing_server_default=sa.text("'ENTER_MARKET'"))

    with op.batch_alter_table('instrument', schema=None) as batch_op:
        batch_op.alter_column('company_name',
               existing_type=sa.VARCHAR(),
               nullable=True)

    with op.batch_alter_table('expertrecommendation', schema=None) as batch_op:
        batch_op.drop_constraint('fk_expertrecommendation_market_analysis', type_='foreignkey')
        batch_op.alter_column('recommended_action',
               existing_type=sa.Enum('SELL', 'BUY', 'HOLD', 'ERROR', name='orderrecommendation'),
               type_=sa.VARCHAR(length=4),
               existing_nullable=False)

    with op.batch_alter_table('expertinstance', schema=None) as batch_op:
        batch_op.drop_constraint('fk_expertinstance_enter_market_ruleset', type_='foreignkey')
        batch_op.drop_constraint('fk_expertinstance_open_positions_ruleset', type_='foreignkey')

    with op.batch_alter_table('analysisoutput', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=True)

    # ### end Alembic commands ###
